name: build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  IS_STABLE: ${{ !contains(github.ref, '-') }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # Windows 用 PowerShell，其他平台用 Bash
        shell: ${{ startsWith(matrix.platform, 'windows') && 'pwsh' || 'bash' }}

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - platform: windows
            os: self-hosted
            arch: amd64
          # - platform: windows
          #   os: windows-11-arm
          #   arch: arm64
          - platform: macos
            os: macos-14
            arch: amd64
          - platform: macos
            os: macos-14
            arch: arm64
          - platform: android
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-22.04
            arch: amd64
          # - platform: linux
          #   os: ubuntu-24.04-arm
          #   arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Setup Rust (Windows only)
      - name: Setup Rust on Windows
        if: startsWith(matrix.platform, 'windows')
        shell: pwsh
        run: |
          Write-Host "Installing Rust for Windows..."
          Invoke-WebRequest -Uri "https://win.rustup.rs/x86_64" -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-toolchain stable
          $cargoPath = "$env:USERPROFILE\.cargo\bin"
          Add-Content $env:GITHUB_PATH $cargoPath

      # Setup Android signing (only Android)
      - name: Setup Android Signing
        if: startsWith(matrix.platform, 'android')
        run: |
          mkdir -p android/app
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/keystore.jks
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/local.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/local.properties

      # Setup Android SDK if building for Android
      - name: Setup Android SDK
        if: startsWith(matrix.platform, 'android')
        uses: android-actions/setup-android@v3

      # Setup Rust for non-Windows platforms
      - name: Setup Rust
        if: ${{ !startsWith(matrix.platform, 'windows') }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Windows build environment setup
      - name: Setup Windows Build Environment
        if: startsWith(matrix.platform, 'windows')
        shell: pwsh
        run: |
          Write-Host "Setting up Windows build environment..."
          mkdir -Force C:\build-cache | Out-Null
          echo "Build environment prepared."

      # Example build step
      - name: Build project
        run: |
          echo "Building for ${{ matrix.platform }} (${{ matrix.arch }})"
          cargo build --release

      # Example artifact upload (optional)
      - name: Upload binaries
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}-${{ matrix.arch }}
          path: target/release/
