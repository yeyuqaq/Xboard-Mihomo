name: Online Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Build platform'
        required: true
        default: 'android'
        type: choice
        options:
        - android
        - linux
        - windows
        - macos

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
          - platform: macos
            os: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          cache: true

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set up Android environment
        if: inputs.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Install Android SDK
        if: inputs.platform == 'android'
        run: |
          echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.1.8937393" "cmake;3.22.1"
          echo "ANDROID_NDK=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV

      - name: Install Linux dependencies
        if: inputs.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev libayatana-appindicator3-dev
          sudo apt-get install -y libkeybinder-3.0-dev rpm patchelf libfuse2

      - name: Install macOS dependencies
        if: inputs.platform == 'macos'
        run: |
          brew install create-dmg

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Generate SDK code
        run: |
          cd lib/sdk/flutter_xboard_sdk
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          cd ../../..

      - name: Generate project code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Setup project
        run: dart setup.dart ${{ inputs.platform }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ inputs.platform }}
          path: ./dist
          overwrite: true
